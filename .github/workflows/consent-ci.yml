name: consent-ci

on:
  pull_request:
  push:
    branches: [ main ]

concurrency:
  group: consent-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  api-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/lumlyn-web
    env:
      # Setează-le în GitHub → Settings → Secrets/Variables (Repository Variables recomandat)
      NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_POSTHOG_KEY: ${{ vars.NEXT_PUBLIC_POSTHOG_KEY }}
      NEXT_PUBLIC_POSTHOG_HOST: ${{ vars.NEXT_PUBLIC_POSTHOG_HOST }}
      NEXT_PUBLIC_POLICY_VERSION: ${{ vars.NEXT_PUBLIC_POLICY_VERSION }}
      NEXT_PUBLIC_POLICY_EFFECTIVE: ${{ vars.NEXT_PUBLIC_POLICY_EFFECTIVE }}
      # Gate: rulează testul pozitiv doar dacă variabila e "true" (evită inserții pe prod)
      ALLOW_CI_INSERTS: ${{ vars.ALLOW_CI_INSERTS }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'apps/lumlyn-web/package-lock.json'

      - name: Install deps
        run: npm ci

      - name: Build Next.js (prod)
        run: npm run build

      - name: Start server
        run: |
          nohup npm run start -- -p 3000 >/tmp/next.log 2>&1 &
          echo $! > /tmp/next.pid

      - name: Wait for health
        run: |
          for i in {1..30}; do
            curl -fsS http://localhost:3000/api/ping && exit 0
            sleep 1
          done
          echo "Server did not become ready"; tail -n +1 /tmp/next.log; exit 1

      - name: Negative test - no consent => 400
        run: |
          set -e
          code=$(curl -s -o /tmp/resp.json -w "%{http_code}" \
            -H "Content-Type: application/json" \
            -d '{"email":"gdpr.fail@example.com","quiz_answers":{"q1":"no"}}' \
            http://localhost:3000/api/leads)
          echo "HTTP $code"; cat /tmp/resp.json || true
          test "$code" = "400"

      - name: Positive test - with consent => 200 (gated)
        if: ${{ env.ALLOW_CI_INSERTS == 'true' }}
        run: |
          set -e
          code=$(curl -s -o /tmp/resp.json -w "%{http_code}" \
            -H "Content-Type: application/json" \
            -d '{"email":"gdpr.ci+'${{ github.run_id }}'@example.com","quiz_answers":{"q1":"yes"},"consent":true}' \
            http://localhost:3000/api/leads)
          echo "HTTP $code"; cat /tmp/resp.json || true
          test "$code" = "200"

      - name: Show server logs on failure
        if: failure()
        run: |
          echo "---- next.log ----"
          tail -n +500 /tmp/next.log || true

      - name: Stop server
        if: always()
        run: |
          kill $(cat /tmp/next.pid) 2>/dev/null || true
